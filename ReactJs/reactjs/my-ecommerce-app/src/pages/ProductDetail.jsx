import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import api from '../api/axiosInstance';
import { useCart } from '../components/CartContext';

function ProductDetail() {
  const { id } = useParams();
  const navigate = useNavigate();
  const { addToCart, cartLoading, cartError } = useCart();
  const [product, setProduct] = useState(null);
  const [similarProducts, setSimilarProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [activeTab, setActiveTab] = useState('details');
  const [quantity, setQuantity] = useState(1);

  useEffect(() => {
    fetchProduct();
  }, [id]);

  const fetchProduct = async () => {
    setLoading(true);
    setError(null);
    try {
      const response = await api.get(`/products/${id}`);
      setProduct(response.data);
      fetchSimilarProducts();
    } catch (error) {
      setError(error.response?.data?.message || error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞');
    } finally {
      setLoading(false);
    }
  };

  const fetchSimilarProducts = async () => {
    try {
      const response = await api.get(`/products/similar/${id}`);
      setSimilarProducts(response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤:', error);
    }
  };

  const handleAddToCart = async (productToAdd) => {
    if (!productToAdd || !productToAdd.id) {
      setError('–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID');
      return;
    }
    const token = localStorage.getItem('token');
    if (!token) {
      navigate('/login');
      return;
    }
    try {
      await addToCart({ ...productToAdd, quantity: 1 }); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 1 –¥–ª—è –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
    } catch (error) {
      if (error.response && error.response.status === 403) {
        navigate('/login');
      } else {
        setError('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É: ' + (error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
      }
    }
  };

  const maskedMarketplaceLink = (url) => {
    return url ? 'üîó –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å (–Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è)' : '–°—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞';
  };

  if (loading) return <p className="text-center text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (error) return <p className="text-center text-red-500">{error}</p>;
  if (!product) return <p className="text-center text-gray-400">–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</p>;

  return (
    <div className="container mx-auto px-4 py-8">
      <h2 className="text-4xl font-bold text-gray-100 mb-6" style={{ color: 'var(--accent-color)' }}>
        –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞: {product.name}
      </h2>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç */}
      <div className="flex flex-col lg:flex-row gap-8">
        {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ */}
        <div className="w-full lg:w-1/2">
          {product.imageUrl ? (
            <img
              src={product.imageUrl}
              alt={product.name}
              className="w-full h-96 object-cover rounded-lg"
              onError={(e) => {
                e.target.src = 'https://via.placeholder.com/384x384?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ+–Ω–µ+–¥–æ—Å—Ç—É–ø–Ω–æ';
              }}
            />
          ) : (
            <div className="w-full h-96 bg-gray-700 rounded-lg flex items-center justify-center">
              <span className="text-gray-400">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</span>
            </div>
          )}
          <div className="mt-4 flex gap-2">
            {[1, 2].map((i) => (
              <div key={i} className="w-20 h-20 bg-gray-600 rounded-lg"></div>
            ))}
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
        <div className="w-full lg:w-1/2 bg-gray-800 p-6 rounded-lg shadow-md text-white">
          <h3 className="text-2xl font-semibold mb-2">{product.name}</h3>
          <div className="flex justify-between mb-4">
            <span className="text-green-400 font-bold">¬•{product.price?.toFixed(2)}</span>
            <span className="text-yellow-400 font-bold">BYN {(product.price * 3.5)?.toFixed(2)}</span>
          </div>

          {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ */}
          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-300">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</label>
            <input
              type="number"
              value={quantity}
              onChange={(e) => setQuantity(Math.max(1, parseInt(e.target.value) || 1))}
              className="w-full p-2 bg-gray-700 text-white rounded-lg"
              min="1"
            />
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <button
            onClick={handleAddToCart}
            className="w-full bg-blue-600 p-2 rounded-lg text-white hover:bg-blue-700 transition duration-300 mb-2"
            disabled={cartLoading}
          >
            –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
          </button>
          <button
            onClick={() => navigate(-1)}
            className="w-full bg-gray-600 p-2 rounded-lg text-white hover:bg-gray-700 transition duration-300"
          >
            –ù–∞–∑–∞–¥
          </button>

          {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å */}
          <div className="mt-4">
            <p className="text-sm text-gray-300">–ö—É–ø–ª–µ–Ω–æ –Ω–∞:</p>
            <a
              href={product.url}
              target="_blank"
              rel="noopener noreferrer"
              className="text-blue-400 hover:underline"
              onClick={(e) => {
                e.preventDefault();
                alert(`–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è: ${product.url}`);
              }}
            >
              {maskedMarketplaceLink(product.url)}
            </a>
          </div>
        </div>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div className="mt-8">
        <div className="flex border-b border-gray-600">
          <button
            className={`px-4 py-2 ${activeTab === 'details' ? 'border-b-2 border-[var(--accent-color)] text-[var(--accent-color)]' : 'text-gray-400'}`}
            onClick={() => setActiveTab('details')}
          >
            –î–µ—Ç–∞–ª–∏
          </button>
          <button
            className={`px-4 py-2 ${activeTab === 'history' ? 'border-b-2 border-[var(--accent-color)] text-[var(--accent-color)]' : 'text-gray-400'}`}
            onClick={() => setActiveTab('history')}
          >
            –ò—Å—Ç–æ—Ä–∏—è
          </button>
          <button
            className={`px-4 py-2 ${activeTab === 'reviews' ? 'border-b-2 border-[var(--accent-color)] text-[var(--accent-color)]' : 'text-gray-400'}`}
            onClick={() => setActiveTab('reviews')}
          >
            –û—Ç–∑—ã–≤—ã
          </button>
        </div>

        <div className="mt-4 p-6 bg-gray-800 rounded-lg">
          {activeTab === 'details' && (
            <div>
              <p className="text-gray-300">{product.description || '–î–µ—Ç–∞–ª–∏ —Ç–æ–≤–∞—Ä–∞ –±—É–¥—É—Ç –∑–¥–µ—Å—å.'}</p>
            </div>
          )}
          {activeTab === 'history' && (
            <div>
              <p className="text-gray-300">–ü—Ä–æ–¥–∞–Ω–æ: {product.salesCount || 0} —Ä–∞–∑</p>
              <p className="text-gray-300">–ö–ª–∞—Å—Ç–µ—Ä: {product.cluster !== undefined ? product.cluster : '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}</p>
              <p className="text-gray-300">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {new Date(product.lastUpdated).toLocaleString()}</p>
            </div>
          )}
          {activeTab === 'reviews' && (
            <div>
              <p className="text-gray-300">–û—Ç–∑—ã–≤—ã: (–º–∞–∫–µ—Ç) –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.</p>
              <button className="mt-2 bg-gray-600 p-2 rounded-lg text-white">–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</button>
            </div>
          )}
        </div>
      </div>

      {/* –ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã */}
      <div className="mt-8">
        <h3 className="text-2xl font-bold text-[var(--accent-color)] mb-4">–ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã</h3>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
          {similarProducts.length > 0 ? (
            similarProducts.map((similar) => (
              <div key={similar.id} className="bg-gray-800 rounded-lg shadow-md overflow-hidden">
                <div className="w-full h-48">
                  {similar.imageUrl ? (
                    <img
                      src={similar.imageUrl}
                      alt={similar.name}
                      className="w-full h-full object-cover"
                      onError={(e) => {
                        e.target.src = 'https://via.placeholder.com/192x192?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ+–Ω–µ+–¥–æ—Å—Ç—É–ø–Ω–æ';
                      }}
                    />
                  ) : (
                    <div className="w-full h-full bg-gray-700 flex items-center justify-center">
                      <span className="text-gray-400">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</span>
                    </div>
                  )}
                </div>
                <div className="p-4 text-white">
                  <h4 className="text-lg font-semibold mb-2">{similar.name}</h4>
                  <button
                    onClick={() => handleAddToCart(similar)}
                    className="w-full bg-blue-600 p-2 rounded-lg text-white hover:bg-blue-700 transition duration-300 mb-2"
                    disabled={cartLoading}
                  >
                    –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                  </button>
                  <button
                    onClick={() => navigate(`/product/${similar.id}`)}
                    className="w-full bg-gray-600 p-2 rounded-lg text-white hover:bg-gray-700 transition duration-300"
                  >
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </button>
                </div>
              </div>
            ))
          ) : (
            <p className="text-center text-gray-400 col-span-full">–ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          )}
        </div>
      </div>

      {(cartError || error) && <p className="text-red-500 mt-2">{cartError || error}</p>}
    </div>
  );
}

export default ProductDetail;