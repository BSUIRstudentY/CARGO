spring:
  main:
    lazy-initialization: true
  servlet:
    session:
      timeout: 5m
      cookie:
        http-only: true
        secure: true
  application:
    name: demo
  redis:
    host: redis
    port: 6379
    timeout: 2000ms
  cache:
    type: redis
  task:
    execution:
      pool:
        core-size: 5
        max-size: 10
        queue-capacity: 100
      thread-name-prefix: async-task-
  mail:
    host: smtp.gmail.com
    port: 587
    username: fluvionbiz@gmail.com
    password: 1206_1105timaZ
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: com.example.demo.Entities, com.example.demo.POJO
  datasource:
    url: jdbc:mysql://mysql:3306/CargoDB?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: fluvion_user
    password: 1206_1105timaZ
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    open-in-view: false
  sql:
    init:
      mode: always
server:
  port: 8080
jwt:
  secret: your-very-secure-secret-key-32-chars-long
  expiration: 86400000